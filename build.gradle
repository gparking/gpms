buildscript {
    ext {
        kotlinVersion = '1.5.31'
        springBootVersion = '2.3.1.RELEASE'
        mooworkVersion = "1.2.0"
        vertxVersion = '4.2.2'
        moshi_version = '1.13.0'
        rxjava      = '2.2.21'
        mapstructVersion = '1.4.2.Final'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}") // kotlin-spring 사용을 위해 필요하다.
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}") // kotlin-jpa 사용을 위해 필요하다.
        classpath "org.hidetake:gradle-ssh-plugin:2.9.0"
//        classpath("com.moowork.gradle:gradle-node-plugin:${mooworkVersion}")
    }
}

//plugins {
//    id 'java'
//    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
//    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.72"
//}

apply {
    plugin("java")
    plugin("kotlin")
    plugin("kotlin-spring")
    plugin("kotlin-jpa")
    plugin('kotlin-kapt')
    plugin("idea")
    plugin("eclipse")
    plugin("org.springframework.boot")
    plugin("io.spring.dependency-management")
}

group = 'io.glnt.gpms'
version = '1.0-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.1'
    implementation('org.jetbrains.kotlin:kotlin-reflect:1.6.0')
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.31')
    implementation 'org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE'
    implementation 'com.zaxxer:HikariCP:4.0.3' // 5.x -> java 11
    // jsonb
    implementation 'javax.inject:javax.inject:1'
    implementation 'com.vladmihalcea:hibernate-types-52:2.14.0'
    // log5
    implementation'io.github.microutils:kotlin-logging:2.1.16'
    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'io.github.jhipster:jhipster:1.3.1'

    //compile group: 'org.springframework.plugin', name: 'spring-plugin-core', version: '2.0.0.RELEASE'
//    compile("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")
    implementation "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
//    compile('org.springframework.boot:spring-boot-starter-data-rest:2.6.1')
    // Database
    implementation('org.springframework.boot:spring-boot-starter-data-jpa:2.6.1')
    // mariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.3' // MariaDB

    implementation("javax.validation:validation-api:2.0.1.Final")

//    compile('org.mariadb.jdbc:mariadb-java-client:2.7.3')
//    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'
//    compile group: 'javax.inject', name: 'javax.inject', version: '1'
//    compile group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.14.0'



//    compile group: 'io.github.jhipster', name: 'jhipster', version: '1.3.0'

    // test
    testImplementation 'junit:junit:4.13.2'
    implementation 'io.vertx:vertx-core:4.2.2'
    implementation 'io.vertx:vertx-web:4.2.2'
    implementation 'io.vertx:vertx-auth-jwt:4.2.2'
    implementation 'io.vertx:vertx-unit:4.2.2'
    // http
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.alibaba:fastjson:1.2.78'
    implementation 'com.mashape.unirest:unirest-java:1.4.9'

    // Moshi
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation ("com.squareup.moshi:moshi:${moshi_version}")
    kapt ("com.squareup.moshi:moshi-kotlin-codegen:${moshi_version}")

    // kotlin serialization JVM dependency
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"

    //excel
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'org.apache.poi:poi-ooxml-schemas:4.1.2'

    //timer
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"

    // Jackson
    implementation('com.fasterxml.jackson.module:jackson-module-parameter-names:2.13.0')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.0')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0')

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

    //model mapping
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    //test
    testImplementation('io.kotest:kotest-runner-junit5:5.0.2')
    testImplementation('io.kotest:kotest-assertions-core:5.0.2')
    testImplementation('io.kotest:kotest-assertions-json:5.0.2')
    testImplementation('io.kotest:kotest-property:5.0.2')
    testImplementation('io.kotest:kotest-extensions-spring:4.4.3')
    testImplementation('io.mockk:mockk:1.12.1')
    testImplementation('com.ninja-squad:springmockk:3.1.0')
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.6.1')


}
